CLASS apz net/minecraft/block/BlockDoublePlant
	CLASS apz$a Half
		FIELD a UPPER Lapz$a;
		FIELD b LOWER Lapz$a;
		METHOD m asString ()Ljava/lang/String;
	CLASS apz$b Type
		FIELD a SUNFLOWER Lapz$b;
		FIELD b SYRINGA Lapz$b;
		FIELD c DOUBLE_GRASS Lapz$b;
		FIELD d DOUBLE_FERN Lapz$b;
		FIELD e DOUBLE_ROSE Lapz$b;
		FIELD f PAEONIA Lapz$b;
		FIELD g VALUES [Lapz$b;
		FIELD h meta I
		FIELD i name Ljava/lang/String;
		FIELD j shortName Ljava/lang/String;
		METHOD a getMeta ()I
		METHOD a get (I)Lapz$b;
		METHOD c getShortName ()Ljava/lang/String;
		METHOD m asString ()Ljava/lang/String;
	FIELD a VARIANT Laxf;
	FIELD c HALF Laxf;
	FIELD d FACING Laxf;
	METHOD a deserializeState (I)Lawr;
		ARG 0 meta
	METHOD a addStacksForDisplay (Lahn;Lfi;)V
		ARG 0 tab
		ARG 1 list
	METHOD a afterBreak (Lams;Laeb;Let;Lawr;Lavh;Lain;)V
		ARG 0 world
		ARG 1 player
		ARG 2 pos
		ARG 3 state
		ARG 4 blockEntity
		ARG 5 stack
	METHOD a canPlaceAt (Lams;Let;)Z
		ARG 0 world
		ARG 1 pos
	METHOD a place (Lams;Let;Lapz$b;I)V
		ARG 0 world
		ARG 1 pos
		ARG 2 type
		ARG 3 flags
	METHOD a getPickStack (Lams;Let;Lawr;)Lain;
		ARG 0 world
		ARG 1 pos
		ARG 2 state
	METHOD a onBreak (Lams;Let;Lawr;Laeb;)V
		ARG 0 world
		ARG 1 pos
		ARG 2 state
		ARG 3 player
	METHOD a onPlaced (Lams;Let;Lawr;Lvn;Lain;)V
		ARG 0 world
		ARG 1 pos
		ARG 2 state
		ARG 3 placer
		ARG 4 stack
	METHOD a isFertilizable (Lams;Let;Lawr;Z)Z
		ARG 0 world
		ARG 1 pos
		ARG 2 state
		ARG 3 remote
	METHOD a canGrow (Lams;Ljava/util/Random;Let;Lawr;)Z
		ARG 0 world
		ARG 1 rand
		ARG 2 pos
		ARG 3 state
	METHOD a isAir (Lamw;Let;)Z
		ARG 0 view
		ARG 1 pos
	METHOD a getDropItem (Lawr;Ljava/util/Random;I)Lail;
		ARG 0 state
		ARG 1 random
		ARG 2 fortune
	METHOD b createStateFactory ()Laws;
	METHOD b grow (Lams;Ljava/util/Random;Let;Lawr;)V
		ARG 0 world
		ARG 1 rand
		ARG 2 pos
		ARG 3 state
	METHOD b getBoundingBox (Lawr;Lamw;Let;)Lbgz;
		ARG 0 state
		ARG 1 view
		ARG 2 pos
	METHOD d getDropItemDamage (Lawr;)I
		ARG 0 state
	METHOD d getRenderingState (Lawr;Lamw;Let;)Lawr;
		ARG 0 state
		ARG 1 view
		ARG 2 pos
	METHOD e serializeState (Lawr;)I
		ARG 0 state
	METHOD f isValidLocation (Lams;Let;Lawr;)Z
		ARG 0 world
		ARG 1 pos
		ARG 2 state
	METHOD u getOffsetType ()Laou$a;
