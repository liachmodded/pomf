CLASS apu net/minecraft/block/BlockRedstoneGateBase
	FIELD c BOX Lbgz;
	FIELD d powered Z
	METHOD <init> (Z)V
		ARG 0 powered
	METHOD A isPowered (Lawr;)Z
		ARG 0 state
	METHOD B isValidInput (Lawr;)Z
		ARG 0 state
	METHOD C isGate (Lawr;)Z
		ARG 0 state
	METHOD D matchesType (Lawr;)Z
		ARG 0 other
	METHOD E getUpdateDelay (Lawr;)I
		ARG 0 state
	METHOD a canPlaceAt (Lams;Let;)Z
		ARG 0 world
		ARG 1 pos
	METHOD a randomTick (Lams;Let;Lawr;Ljava/util/Random;)V
		ARG 0 world
		ARG 1 pos
		ARG 2 state
		ARG 3 random
	METHOD a onPlaced (Lams;Let;Lawr;Lvn;Lain;)V
		ARG 0 world
		ARG 1 pos
		ARG 2 state
		ARG 3 placer
		ARG 4 stack
	METHOD a getStateForPlacement (Lams;Let;Lfa;FFFILvn;)Lawr;
		ARG 0 world
		ARG 1 pos
		ARG 2 facing
		ARG 3 hitX
		ARG 4 hitY
		ARG 5 hitZ
		ARG 6 metadata
		ARG 7 player
	METHOD a getBlockFaceShape (Lamw;Lawr;Let;Lfa;)Lawp;
		ARG 0 blockView
		ARG 1 state
		ARG 2 pos
		ARG 3 face
	METHOD a getOutputLevel (Lamw;Let;Lawr;)I
		ARG 0 view
		ARG 1 pos
		ARG 2 state
	METHOD a getInputLevel (Lamw;Let;Lfa;)I
		ARG 0 view
		ARG 1 pos
		ARG 2 facing
	METHOD a update (Lawr;Lams;Let;Laou;Let;)V
		ARG 0 state
		ARG 1 world
		ARG 2 pos
		ARG 3 block
		ARG 4 updatePos
	METHOD a shouldRenderSide (Lawr;Lamw;Let;Lfa;)Z
		ARG 0 state
		ARG 1 view
		ARG 2 pos
		ARG 3 facing
	METHOD b updateTick (Lams;Let;Lawr;Ljava/util/Random;)V
		ARG 0 world
		ARG 1 pos
		ARG 2 state
		ARG 3 random
	METHOD b isFullBoundsCubeForCulling (Lawr;)Z
		ARG 0 state
	METHOD b getBoundingBox (Lawr;Lamw;Let;)Lbgz;
		ARG 0 state
		ARG 1 view
		ARG 2 pos
	METHOD b getWeakRedstonePower (Lawr;Lamw;Let;Lfa;)I
		ARG 0 state
		ARG 1 view
		ARG 2 pos
		ARG 3 facingFrom
	METHOD c onBlockAdded (Lams;Let;Lawr;)V
		ARG 0 world
		ARG 1 pos
		ARG 2 state
	METHOD c getMaxInputLevelSides (Lamw;Let;Lawr;)I
		ARG 0 view
		ARG 1 pos
		ARG 2 facing
	METHOD c isFullBoundsCubeForConnection (Lawr;)Z
		ARG 0 state
	METHOD c getStrongRedstonePower (Lawr;Lamw;Let;Lfa;)I
		ARG 0 state
		ARG 1 view
		ARG 2 pos
		ARG 3 facingFrom
	METHOD d onDestroyedByPlayer (Lams;Let;Lawr;)V
		ARG 0 world
		ARG 1 pos
		ARG 2 state
	METHOD d isEqual (Laou;)Z
		ARG 0 other
	METHOD f getRenderLayer ()Lamk;
	METHOD g emitsRedstonePower (Lawr;)Z
		ARG 0 state
	METHOD x getUpdateDelayInternal (Lawr;)I
		ARG 0 state
	METHOD y getPoweredState (Lawr;)Lawr;
		ARG 0 state
	METHOD z getUnpoweredState (Lawr;)Lawr;
		ARG 0 state
