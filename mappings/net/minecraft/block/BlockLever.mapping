CLASS arr net/minecraft/block/BlockLever
	CLASS arr$a LeverFacing
		FIELD a DOWN_X Larr$a;
		FIELD b EAST Larr$a;
		FIELD c WEST Larr$a;
		FIELD d SOUTH Larr$a;
		FIELD e NORTH Larr$a;
		FIELD f UP_Z Larr$a;
		FIELD g UP_X Larr$a;
		FIELD h DOWN_Z Larr$a;
		FIELD i VALUES [Larr$a;
		FIELD j id I
		FIELD k name Ljava/lang/String;
		FIELD l facing Lfa;
		METHOD a getId ()I
		METHOD a byId (I)Larr$a;
			ARG 0 id
		METHOD c getFacing ()Lfa;
		METHOD m asString ()Ljava/lang/String;
	FIELD a FACING Laxf;
	FIELD b POWERED Laxd;
	METHOD a deserializeState (I)Lawr;
		ARG 0 meta
	METHOD a canPlaceAt (Lams;Let;)Z
		ARG 0 world
		ARG 1 pos
	METHOD a activate (Lams;Let;Lawr;Laeb;Ltz;Lfa;FFF)Z
		ARG 0 world
		ARG 1 pos
		ARG 2 state
		ARG 3 player
		ARG 4 hand
		ARG 5 facing
		ARG 6 hitX
		ARG 7 hitY
		ARG 8 hitZ
	METHOD a getStateForPlacement (Lams;Let;Lfa;FFFILvn;)Lawr;
		ARG 0 world
		ARG 1 pos
		ARG 2 facing
		ARG 3 hitX
		ARG 4 hitY
		ARG 5 hitZ
		ARG 6 metadata
		ARG 7 player
	METHOD a getBlockFaceShape (Lamw;Lawr;Let;Lfa;)Lawp;
		ARG 0 blockView
		ARG 1 state
		ARG 2 pos
		ARG 3 face
	METHOD a update (Lawr;Lams;Let;Laou;Let;)V
		ARG 0 state
		ARG 1 world
		ARG 2 pos
		ARG 3 block
		ARG 4 updatePos
	METHOD a getCollisionBox (Lawr;Lamw;Let;)Lbgz;
		ARG 0 state
		ARG 1 view
		ARG 2 pos
	METHOD a applyMirror (Lawr;Larw;)Lawr;
		ARG 0 state
		ARG 1 mirror
	METHOD a applyRotation (Lawr;Latk;)Lawr;
		ARG 0 state
		ARG 1 rotation
	METHOD b createStateFactory ()Laws;
	METHOD b onBlockRemoved (Lams;Let;Lawr;)V
		ARG 0 world
		ARG 1 pos
		ARG 2 state
	METHOD b canPlaceAtSide (Lams;Let;Lfa;)Z
		ARG 0 world
		ARG 1 pos
		ARG 2 side
	METHOD b isFullBoundsCubeForCulling (Lawr;)Z
		ARG 0 state
	METHOD b getBoundingBox (Lawr;Lamw;Let;)Lbgz;
		ARG 0 state
		ARG 1 view
		ARG 2 pos
	METHOD b getWeakRedstonePower (Lawr;Lamw;Let;Lfa;)I
		ARG 0 state
		ARG 1 view
		ARG 2 pos
		ARG 3 facingFrom
	METHOD c isFullBoundsCubeForConnection (Lawr;)Z
		ARG 0 state
	METHOD c getStrongRedstonePower (Lawr;Lamw;Let;Lfa;)I
		ARG 0 state
		ARG 1 view
		ARG 2 pos
		ARG 3 facingFrom
	METHOD e serializeState (Lawr;)I
		ARG 0 state
	METHOD g emitsRedstonePower (Lawr;)Z
		ARG 0 state
