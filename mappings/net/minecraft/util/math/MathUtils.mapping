CLASS wy net/minecraft/util/math/MathUtils
	FIELD a SQUARE_ROOT_2 F
	FIELD c rand Ljava/util/Random;
	FIELD d MULTIPLY_DE_BRUIJN_BIT_POSITION [I
	FIELD e SMALLEST_FRACTION_FREE_DOUBLE D
	FIELD f asinTable [D
	FIELD g cosTable [D
	METHOD a generateRandomUuid ()Ljava/util/UUID;
	METHOD a sqrt (D)F
		ARG 0 value
	METHOD a absMax (DD)D
		ARG 0 firstValue
		ARG 1 secondValue
	METHOD a clamp (DDD)D
		ARG 0 value
		ARG 1 min
		ARG 2 max
	METHOD a sin (F)F
		ARG 0 value
	METHOD a equalsApproximate (FF)Z
		ARG 0 x
		ARG 1 y
	METHOD a clamp (FFF)F
		ARG 0 value
		ARG 1 min
		ARG 2 max
	METHOD a abs (I)I
		ARG 0 value
	METHOD a intFloorDiv (II)I
		ARG 0 num
		ARG 1 denom
	METHOD a clamp (III)I
		ARG 0 value
		ARG 1 min
		ARG 2 max
	METHOD a hashCode (Lfc;)J
		ARG 0 vec
	METHOD a getInt (Ljava/lang/String;II)I
		ARG 0 firstValue
		ARG 1 firstValueDefault
		ARG 2 secondValue
	METHOD a generateRandomUuid (Ljava/util/Random;)Ljava/util/UUID;
		ARG 0 rand
	METHOD a nextDouble (Ljava/util/Random;DD)D
		ARG 0 rand
		ARG 1 min
		ARG 2 max
	METHOD a nextFloat (Ljava/util/Random;FF)F
		ARG 0 rand
		ARG 1 min
		ARG 2 max
	METHOD a nextInt (Ljava/util/Random;II)I
		ARG 0 rand
	METHOD a average ([J)D
		ARG 0 values
	METHOD b fastFloor (D)I
		ARG 0 value
	METHOD b modFloor (DD)D
		ARG 0 num
		ARG 1 denom
	METHOD b clampedLerp (DDD)D
		ARG 0 v0
		ARG 1 v1
		ARG 2 time
	METHOD b cos (F)F
		ARG 0 value
	METHOD b modFloor (FF)F
		ARG 0 num
		ARG 1 denom
	METHOD b wrapDegrees (I)I
		ARG 0 value
	METHOD b modFloor (II)I
		ARG 0 num
		ARG 1 denom
	METHOD b packRgbInts (III)I
		ARG 0 r
		ARG 1 g
		ARG 2 b
	METHOD c floor (D)I
		ARG 0 value
	METHOD c atan2 (DD)D
		ARG 0 y
		ARG 1 x
	METHOD c lerp (DDD)D
		ARG 0 time
		ARG 1 v0
		ARG 2 v1
	METHOD c sqrt (F)F
		ARG 0 value
	METHOD c smallestEncompassingPowerOfTwo (I)I
		ARG 0 value
	METHOD c roundUp (II)I
	METHOD c hashCode (III)J
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD d lfloor (D)J
		ARG 0 value
	METHOD d floor (F)I
		ARG 0 value
	METHOD d packRgbFloats (FFF)I
		ARG 0 r
		ARG 1 g
		ARG 2 b
	METHOD d log2DeBruijn (I)I
		ARG 0 value
	METHOD d multiplyColors (II)I
		ARG 0 c0
		ARG 1 c1
	METHOD e abs (F)F
		ARG 0 value
	METHOD e hsvToRgb (FFF)I
		ARG 0 hue
		ARG 1 saturation
		ARG 2 value
	METHOD e log2 (I)I
		ARG 0 value
	METHOD f ceil (D)I
		ARG 0 value
	METHOD f ceil (F)I
		ARG 0 value
	METHOD f finishMurmurHash (I)I
		ARG 0 value
	METHOD g wrapDegrees (D)D
		ARG 0 value
	METHOD g wrapDegrees (F)F
		ARG 0 value
	METHOD g isPowerOfTwo (I)Z
		ARG 0 value
	METHOD h getFractionalPart (D)D
		ARG 0 value
	METHOD i fastInverseSqrt (D)D
		ARG 0 value
